openapi: 3.0.3
info:
  title: CRADA API
  contact:
    name: CRADA staff team
    url: "https://www.crada.ga/api"
    email: "contact@crada.ga"
  description: |-

    <a target="_blank" href="https://god.postman.co/run-collection/13642074-7fad3869-3032-45b7-bc83-e8213302b87e?action=collection%2Ffork&collection-url=entityId%3D13642074-7fad3869-3032-45b7-bc83-e8213302b87e%26entityType%3Dcollection">
         <img alt="Qries" src="https://run.pstmn.io/button.svg" alt="run in Postman"
         width=150" height="70">
      </a>


    # Introduction

    CRADA is an initiative for common people to provide them with various
    essential resources information in their city. A website through which people
    searching for vaccine, medication, vacant beds in hospitals, food facilities,
    plasma and blood donor etc. will be provided here.

    To make developers job easier we are providing the API for the same.

    Api Data is updated every 10 mins and some every 1 hour.

    Jump to <a href="#tag/COVID-19">Covid-19 Related API</a>
  version: '1.0'
servers:
- url: https://www.crada.ga/api/v1/
paths:
  /ping:
    get:
      tags:
      - General
      summary: Ping
      description: Simple Ping command to check whether API is alive or not
      operationId: ping
      parameters:
        - in: header
          name: Accept
          schema:
            type: string
            enum:
            - application/json
          required: true
      responses:
        '200':
          description: Ok
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/Ping'
          headers:
            Accept: application/json

        '400':
          description:
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/error-400'
          headers:
            Accept: application/json
        '500':
          description:
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/error-500'
          headers:
            Accept: application/json

      deprecated: false
  /login:
    post:
      tags:
      - Authentication
      summary: Login
      description: |-
        Using this endpoint you can get the auth token so you can use may other endpoints where you need to Authorization.

        > Note: For this endpoint the rate limit is 15 requests per min per IP address
      operationId: auth/login
      parameters:
      - name: Accept
        in: header
        required: true
        style: simple
        schema:
          type: string
          enum:
          - application/json
      - name: email
        in: query
        description: Email id of the user
        required: true
        type: string
      - name: password
        in: query
        description: Super Secret password of the user
        required: true
        type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/login'
          headers:
            Accept: application/json

        '400':
          description:
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/error-400'
          headers:
            Accept: application/json
        '500':
          description:
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/error-500'
          headers:
            Accept: application/json

      deprecated: false
  /register:
    post:
      tags:
      - Authentication
      summary: Register
      description: |-
        Using this endpoint you can get the auth token by creating an account so you can use may other endpoints where you need to Authorization.

        > Note: For this endpoint the rate limit is 15 requests per min per IP address
      operationId: auth/register
      parameters:
      - name: Accept
        in: header
        required: true
        style: simple
        schema:
          type: string
          enum:
          - application/json
      - name: name
        in: query
        description: name of the user
        required: true
        type: string
      - name: email
        in: query
        description: Email id of the user
        required: true
        type: string
      - name: password
        in: query
        description: Super Secret password of the user
        required: true
        type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/register'
          headers:
            Accept: application/json

        '400':
          description:
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/error-400'
          headers:
            Accept: application/json
        '500':
          description:
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/error-500'
          headers:
            Accept: application/json

      deprecated: false
  /logout:
    post:
      tags:
      - Authentication
      summary: logout
      description: |-
        Using this endpoint you can delete the token so that you can regenerate later when you login again.

        > Note: For this endpoint the rate limit is 15 requests per min per IP address
      operationId: auth/logout
      parameters:
      - name: Accept
        in: header
        required: true
        style: simple
        schema:
          type: string
          enum:
          - application/json
      responses:
        '200':
          description: Ok
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/logout'
          headers:
            Accept: application/json

        '400':
          description:
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/error-400'
          headers:
            Accept: application/json
        '500':
          description:
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/error-500'
          headers:
            Accept: application/json

      deprecated: false


  /country:
    get:
      tags:
      - World Info
      summary: country
      description: In this endpoint you will be able to fetch the country data without any relation to the States data
      operationId: country
      parameters:
      - name: Accept
        in: header
        required: true
        style: simple
        schema:
          type: string
          enum:
          - application/json
      - name: search
        in: query
        required: false
        style: simple
        Schema:
          type: string
          example: India
      responses:
        '200':
          description: ''
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/Country'
          headers:
            Accept: application/json

        '400':
          description:
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/error-400'
          headers:
            Accept: application/json
        '500':
          description:
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/error-500'
          headers:
            Accept: application/json

      deprecated: false
  /state:
    get:
      tags:
      - World Info
      summary: State
      description: In this endpoint you will be able to fetch the State data without any relation to the Country or Cities data
      operationId: State
      parameters:
      - name: Accept
        in: header
        required: true
        style: simple
        schema:
          type: string
          enum:
          - application/json
      responses:
        '200':
          description: ''
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/State'
          headers:
            Accept: application/json

        '400':
          description:
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/error-400'
          headers:
            Accept: application/json
        '500':
          description:
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/error-500'
          headers:
            Accept: application/json

      deprecated: false
  /city:
    get:
      tags:
      - World Info
      summary: City
      description: In this endpoint you will be able to fetch the City or multiple Cities without any relation to the States or country data
      operationId: City
      parameters:
      - name: Accept
        in: header
        required: true
        style: simple
        schema:
          type: string
          enum:
          - application/json
      responses:
        '200':
          description: ''
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/City'
          headers:
            Accept: application/json

        '400':
          description:
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/error-400'
          headers:
            Accept: application/json
        '500':
          description:
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/error-500'
          headers:
            Accept: application/json

      deprecated: false
  /category:
    get:
      tags:
      - Categories
      summary: category
      description: In this endpoint you will be able to fetch the Category id and names and images of the categories with relationship to sub category endpoint.
      operationId: category
      parameters:
      - name: Accept
        in: header
        required: true
        style: simple
        schema:
          type: string
          enum:
          - application/json
      responses:
        '200':
          description: ''
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/category'
          headers:
            Accept: application/json

        '400':
          description:
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/error-400'
          headers:
            Accept: application/json
        '500':
          description:
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/error-500'
          headers:
            Accept: application/json

      deprecated: false
  /sub-category:
    get:
      tags:
      - Categories
      summary: sub-category
      description: In this endpoint you will be able to fetch the Sub Category id and names with the relation to the categories data.
      operationId: sub-category
      parameters:
      - name: search
        in: query
        description: >-
          {Optional}


          Search by ID , Name OR Category ID
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: Accept
        in: header
        required: true
        style: simple
        schema:
          type: string
          enum:
          - application/json
      responses:
        '200':
          description: ''
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/sub-category'
          headers:
            Accept: application/json

        '400':
          description:
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/error-400'
          headers:
            Accept: application/json
        '500':
          description:
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/error-500'
          headers:
            Accept: application/json

      deprecated: false
  /resource:
    get:
      tags:
      - Resources
      summary: resource
      operationId: resource
      parameters:
      - name: Accept
        in: header
        required: true
        style: simple
        schema:
          type: string
          enum:
          - application/json
      responses:
        '200':
          description: ''
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/resource'
          headers:
            Accept: application/json

        '400':
          description:
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/error-400'
          headers:
            Accept: application/json
        '500':
          description:
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/error-500'
          headers:
            Accept: application/json
      deprecated: false
  /create-resource:
    post:
      tags:
      - New requests
      summary: Create new resource
      operationId: request/new/resource
      parameters:
      - name: Accept
        in: header
        required: true
        style: simple
        schema:
          type: string
          enum:
          - application/json
      responses:
        '200':
          description: ''
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/resource'
          headers:
            Accept: application/json

        '400':
          description:
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/error-400'
          headers:
            Accept: application/json
        '500':
          description:
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/error-500'
          headers:
            Accept: application/json
      deprecated: false
  /create-category:
    post:
      tags:
      - New requests
      summary: Create new category
      operationId: request/new/category
      parameters:
      - name: Accept
        in: header
        required: true
        style: simple
        schema:
          type: string
          enum:
          - application/json
      responses:
        '200':
          description: ''
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/category'
          headers:
            Accept: application/json

        '400':
          description:
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/error-400'
          headers:
            Accept: application/json
        '500':
          description:
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/error-500'
          headers:
            Accept: application/json
      deprecated: false
  /create-sub-category:
    post:
      tags:
      - New requests
      summary: Create new sub-category
      operationId: request/new/sub-category
      parameters:
      - name: Accept
        in: header
        required: true
        style: simple
        schema:
          type: string
          enum:
          - application/json
      responses:
        '200':
          description: ''
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/sub-category'
          headers:
            Accept: application/json

        '400':
          description:
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/error-400'
          headers:
            Accept: application/json
        '500':
          description:
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/error-500'
          headers:
            Accept: application/json
      deprecated: false
  /create-country:
    post:
      tags:
      - New requests
      summary: Create new country
      operationId: request/new/country
      parameters:
      - name: Accept
        in: header
        required: true
        style: simple
        schema:
          type: string
          enum:
          - application/json
      responses:
        '200':
          description: ''
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/Country'
          headers:
            Accept: application/json

        '400':
          description:
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/error-400'
          headers:
            Accept: application/json
        '500':
          description:
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/error-500'
          headers:
            Accept: application/json
      deprecated: false
  /create-state:
    post:
      tags:
      - New requests
      summary: Create new state
      operationId: request/new/state
      parameters:
      - name: Accept
        in: header
        required: true
        style: simple
        schema:
          type: string
          enum:
          - application/json
      responses:
        '200':
          description: ''
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/State'
          headers:
            Accept: application/json

        '400':
          description:
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/error-400'
          headers:
            Accept: application/json
        '500':
          description:
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/error-500'
          headers:
            Accept: application/json
      deprecated: false
  /create-city:
    post:
      tags:
      - New requests
      summary: Create new city
      operationId: request/new/city
      parameters:
      - name: Accept
        in: header
        required: true
        style: simple
        schema:
          type: string
          enum:
          - application/json
      responses:
        '200':
          description: ''
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/City'
          headers:
            Accept: application/json

        '400':
          description:
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/error-400'
          headers:
            Accept: application/json
        '500':
          description:
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/error-500'
          headers:
            Accept: application/json
      deprecated: false
  /covid-19/all:
    get:
      tags:
      - Worldometers API
      summary: All data
      operationId: /covid-19/all
      parameters:
      - name: Accept
        in: header
        required: true
        style: simple
        schema:
          type: string
          enum:
          - application/json
      - name: type
        in: query
        required: false
        example: today , yesterday , yesterday2
        type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/covid_19_All'
          headers:
            Accept: application/json

        '400':
          description:
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/error-400'
          headers:
            Accept: application/json
        '500':
          description:
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/error-500'
          headers:
            Accept: application/json
      deprecated: false
  /covid-19/states:
    get:
      tags:
      - Worldometers API
      summary: US States
      operationId: /covid-19/states
      parameters:
      - name: Accept
        in: header
        required: true
        style: simple
        schema:
          type: string
          enum:
          - application/json
      - name: type
        in: query
        required: false
        example: today , yesterday , yesterday2
        type: string
      - name: search
        in: query
        required: false
        example: California, Texas ,etc
        type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/covid_19_States'
          headers:
            Accept: application/json

        '400':
          description:
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/error-400'
          headers:
            Accept: application/json
        '500':
          description:
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/error-500'
          headers:
            Accept: application/json
      deprecated: false
  /covid-19/continents:
    get:
      tags:
      - Worldometers API
      summary: Continents
      operationId: /covid-19/continents
      parameters:
      - name: Accept
        in: header
        required: true
        style: simple
        schema:
          type: string
          enum:
          - application/json
      - name: type
        in: query
        required: false
        example: today , yesterday , yesterday2
        type: string
      - name: search
        in: query
        example: Asia,North America,South America,Europe,Africa,Oceania,Australia
        required: false
        type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/covid_19_countries'
          headers:
            Accept: application/json

        '400':
          description:
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/error-400'
          headers:
            Accept: application/json
        '500':
          description:
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/error-500'
          headers:
            Accept: application/json
      deprecated: false
  /covid-19/Countries:
    get:
      tags:
      - Worldometers API
      summary: Countries
      operationId: /covid-19/countries
      parameters:
      - name: Accept
        in: header
        required: true
        style: simple
        schema:
          type: string
          enum:
          - application/json
      - name: type
        in: query
        example: today , yesterday , yesterday2
        required: false
        type: string
      - name: search
        in: query
        description: name of the country or iso2 code of country
        example: India, IN , AE
        required: false
        type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/covid_19_countries'
          headers:
            Accept: application/json

        '400':
          description:
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/error-400'
          headers:
            Accept: application/json
        '500':
          description:
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/error-500'
          headers:
            Accept: application/json
      deprecated: false
  /covid-19/historical:
    get:
      tags:
      - JHUCSSE
      description: >-
        Get COVID-19 time series data for all countries and their provinces
      summary: historical
      operationId: /covid-19/historical
      parameters:
      - name: Accept
        in: header
        required: true
        style: simple
        schema:
          type: string
          enum:
          - application/json
      - name: lastdays
        in: query
        description: |-
          Number of days to return. Use 'all' for the full data set

          > Note: not giving this field means you want all the dates.
        required: false
        type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/covid_19_historical'
          headers:
            Accept: application/json

        '400':
          description:
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/error-400'
          headers:
            Accept: application/json
        '500':
          description:
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/error-500'
          headers:
            Accept: application/json
      deprecated: false
  /covid-19/historical/{country}:
    get:
      tags:
      - JHUCSSE
      summary: historical by Country
      description: >-
        Get COVID-19 time series data for a specific country

      operationId: /covid-19/historical/{country}
      parameters:
      - name: Accept
        in: header
        required: true
        style: simple
        schema:
          type: string
          enum:
          - application/json
      - name: country
        in: path
        description: >-
          <li> <small>{country}</small> - complete name or iso2 code of the country</li>
        example: /covid-19/historical/in
        required: false
        type: string
      - name: lastdays
        in: query
        description: >-
          Number of days to return. Use 'all' for the full data set

          > Note: not giving this field means you want all the dates.
        required: false
        type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/covid_19_historical'
          headers:
            Accept: application/json

        '400':
          description:
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/error-400'
          headers:
            Accept: application/json
        '500':
          description:
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/error-500'
          headers:
            Accept: application/json
      deprecated: false
  /covid-19/gov:
    get:
      tags:
      - Government
      summary: list
      description: >-
        Get a list of supported countries for government specific data

      operationId: /covid-19/gov
      parameters:
      - name: Accept
        in: header
        required: true
        style: simple
        schema:
          type: string
          enum:
          - application/json
      responses:
        '200':
          description: ''
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/government'
          headers:
            Accept: application/json

        '400':
          description:
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/error-400'
          headers:
            Accept: application/json
        '500':
          description:
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/error-500'
          headers:
            Accept: application/json
      deprecated: false
  /covid-19/gov/{government}:
    get:
      tags:
      - Government
      summary: Gov reported data
      description: >-
        Get COVID-19 government reported data for a specific country

        <table class="table table-bordered table-condensed">
          <thead>
            <tr>
              <th title="Field #1">government</th>
              <th title="Field #2">query param</th>
              <th title="Field #3">values</th>
              <th title="Field #4">-</th>
            </tr>
          </thead>
          <tbody>
          <tr>
            <td>Austria</td>
            <td rowspan="5">type</td>
            <td>
                <ul>
                <li>historical </li>
                <li>byAge </li>
                <li>byDistrict </li>
                <li>hospital </li>
                <li>version</li>
              </ul>
            </td>
            <td rowspan="3"> required </td>
          </tr>
          <tr>
            <td>Canada</td>
            <td>
              <ul>
                <li>default</li>
                <li>active</li>
                <li>cases</li>
                <li>deaths</li>
                <li>recovered</li>
                <li>testing</li>
                <li>vaccine_administration</li>
                <li>vaccine_completion</li>
                <li>vaccine_distribution</li>
              </ul>
            </td>
          </tr>
          <tr>
            <td>Colombia</td>
            <td>
              <ul>
                <li>vaccines_allocations</li>
                <li>pcr_tests</li>
              </ul>
            </td>
          </tr>
          <tr>
            <td>Germany</td>
            <td rowspan="2">
              <ul>
                <li>default</li>
              </ul>
            </td>
            <td rowspan="2"> Optional </td>
          </tr>
          <tr>
            <td>India</td>
          </tr>
          <tr>
            <td>Indonesia</td>
            <td rowspan="9">type</td>
            <td>
              <ul>
                <li>data</li>
                <li>update</li>
                <li>prev</li>
              </ul>
            </td>
            <td> required </td>
          </tr>
          <tr>
            <td>Israel</td>
            <td rowspan="4">
              <ul>
                <li>default</li>
              </ul>
            </td>
            <td rowspan="4"> Optional </td>
          </tr>
          <tr>
            <td>Italy</td>
          </tr>
          <tr>
            <td>NewZealand</td>
          </tr>
          <tr>
            <td>Nigeria</td>
          </tr>
          <tr>
            <td>SouthAfrica</td>
            <td>
              <ul>
                <li>confirmed</li>
                <li>deaths</li>
                <li>recovered</li>
                <li>testing</li>
                <li>vaccination</li>
                <li>fields_full_forms</li>
              </ul>
            </td>
            <td> required </td>
          </tr>
          <tr>
            <td>Switzerland</td>
            <td rowspan="3">
              <ul>
                <li>default</li>
              </ul>
            </td>
            <td rowspan="3"> Optional </td>
          </tr>
          <tr>
            <td>UK</td>
          </tr>
          <tr>
            <td>Vietnam</td>
          </tr>
          </tbody>
        </table>


      operationId: /covid-19/gov/{government}
      parameters:
      - name: Accept
        in: header
        required: true
        style: simple
        schema:
          type: string
          enum:
          - application/json
      responses:
        '200':
          description: ''
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/covid_19_historical'
          headers:
            Accept: application/json

        '400':
          description:
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/error-400'
          headers:
            Accept: application/json
        '500':
          description:
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/error-500'
          headers:
            Accept: application/json
      deprecated: false

  /covid-19/nyt/search/default:
    get:
      tags:
      - NYT
      summary: NYT Search default
      description: >-
        Get COVID-19 New York Times reported default data

      operationId: /covid-19/nyt/search/default
      parameters:
      - name: Accept
        in: header
        required: true
        style: simple
        schema:
          type: string
          enum:
          - application/json
      - name: type
        in: query
        required: true
        schema:
          type: string
          example: recent ,countries ,us-states ,us
      - name: state
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/nyt'
          headers:
            Accept: application/json

        '400':
          description:
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/error-400'
          headers:
            Accept: application/json
        '500':
          description:
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/error-500'
          headers:
            Accept: application/json
      deprecated: false
  /covid-19/nyt/search/avarage:
    get:
      tags:
      - NYT
      summary: NYT Search avarage
      description: >-
        Get COVID-19 New York Times reported avarage data

      operationId: /covid-19/nyt/search/avarage
      parameters:
      - name: Accept
        in: header
        required: true
        style: simple
        schema:
          type: string
          enum:
          - application/json
      - name: type
        in: query
        required: true
        schema:
          type: string
          example: recent ,us-states ,us
      - name: state
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/nyt'
          headers:
            Accept: application/json

        '400':
          description:
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/error-400'
          headers:
            Accept: application/json
        '500':
          description:
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/error-500'
          headers:
            Accept: application/json
      deprecated: false
  /covid-19/nyt/avarage:
    get:
      tags:
      - NYT
      summary: NYT avarage
      description: >-
        Get COVID-19 New York Times reported avarage data

      operationId: /covid-19/nyt/avarage
      parameters:
      - name: Accept
        in: header
        required: true
        style: simple
        schema:
          type: string
          enum:
          - application/json
      - name: type
        in: query
        required: true
        schema:
          type: string
          example: recent ,us-states ,us
      - name: state
        in: query
        required: true
        description: required unless type is us
        schema:
          type: string
      - name: county
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/nytavarage'
          headers:
            Accept: application/json

        '400':
          description:
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/error-400'
          headers:
            Accept: application/json
        '500':
          description:
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/error-500'
          headers:
            Accept: application/json
      deprecated: false
  /covid-19/nyt/default:
    get:
      tags:
      - NYT
      summary: NYT default
      description: >-
        Get COVID-19 New York Times reported default data

      operationId: /covid-19/nyt/default
      parameters:
      - name: Accept
        in: header
        required: true
        style: simple
        schema:
          type: string
          enum:
          - application/json
      - name: type
        in: query
        required: true
        schema:
          type: string
          example: recent ,countries ,us-states ,us
      - name: state
        in: query
        required: true
        description: required unless type is us
        schema:
          type: string
      - name: county
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/nytavarage'
          headers:
            Accept: application/json

        '400':
          description:
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/error-400'
          headers:
            Accept: application/json
        '500':
          description:
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/error-500'
          headers:
            Accept: application/json
      deprecated: false

  /covid-19/apple/country:
    get:
      tags:
      - Apple
      summary: Apple Country list
      description: >-
        Get COVID-19 Apple Mobility country list

      operationId: /covid-19/apple/country
      parameters:
      - name: Accept
        in: header
        required: true
        style: simple
        schema:
          type: string
          enum:
          - application/json
      responses:
        '200':
          description: ''
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/apple-country'
          headers:
            Accept: application/json

        '400':
          description:
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/error-400'
          headers:
            Accept: application/json
        '500':
          description:
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/error-500'
          headers:
            Accept: application/json
      deprecated: false

  /covid-19/apple/country/{country}/{region?}:
    get:
      tags:
      - Apple
      summary: Apple Country Data
      description: >-
        Get COVID-19 Apple Mobility country list

      operationId: /covid-19/apple/country/{country}/{region}
      parameters:
      - name: Accept
        in: header
        required: true
        style: simple
        schema:
          type: string
          enum:
          - application/json
      - name: country
        in: path
        required: true
        schema:
          type: string
          example: India , United Kingdom
      - name: region
        in: path
        required: false
        description: sub-region value ( try giving worng you will get list of all regions)
        schema:
          type: string

      responses:
        '200':
          description: ''
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/apple-country-data'
          headers:
            Accept: application/json

        '400':
          description:
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/error-400'
          headers:
            Accept: application/json
        '500':
          description:
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/error-500'
          headers:
            Accept: application/json
      deprecated: false

  /covid-19/apple/us:
    get:
      tags:
      - Apple
      summary: Apple US list
      description: >-
        Get COVID-19 Apple Mobility US list

      operationId: /covid-19/apple/us
      parameters:
      - name: Accept
        in: header
        required: true
        style: simple
        schema:
          type: string
          enum:
          - application/json
      responses:
        '200':
          description: ''
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/apple-country'
          headers:
            Accept: application/json

        '400':
          description:
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/error-400'
          headers:
            Accept: application/json
        '500':
          description:
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/error-500'
          headers:
            Accept: application/json
      deprecated: false
  /covid-19/apple/us/{state}/{county_and_city?}/:
    get:
      tags:
      - Apple
      summary: Apple US data
      description: >-
        Get COVID-19 Apple Mobility US data

      operationId: /covid-19/apple/us/{state}/{county_and_city?}/
      parameters:
      - name: Accept
        in: header
        required: true
        style: simple
        schema:
          type: string
          enum:
          - application/json
      - name: state
        in: path
        required: true
        schema:
          type: string
          example: Alabama, Texas, Washington
      - name: county_and_city
        in: path
        required: false
        description: county_and_city value ( try giving worng value to get list of all county_and_city)
        schema:
          type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/apple-us-data'
          headers:
            Accept: application/json

        '400':
          description:
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/error-400'
          headers:
            Accept: application/json
        '500':
          description:
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/error-500'
          headers:
            Accept: application/json
      deprecated: false

  covid-19/vaccine/:
    get:
      tags:
      - Vaccine
      summary: Vaccine country list
      description: >-
        Get COVID-19 Vaccine avaiable countries list

      operationId: /covid-19/vaccine/
      parameters:
      - name: Accept
        in: header
        required: true
        style: simple
        schema:
          type: string
          enum:
          - application/json
      responses:
        '200':
          description: ''
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/Vaccine'
          headers:
            Accept: application/json

        '400':
          description:
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/error-400'
          headers:
            Accept: application/json
        '500':
          description:
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/error-500'
          headers:
            Accept: application/json
      deprecated: false
  covid-19/vaccine/{country}:
    get:
      tags:
      - Vaccine
      summary: Vaccine specific country
      description: >-
        Get COVID-19 Vaccine for specific country

      operationId: /covid-19/vaccine/{country}
      parameters:
      - name: Accept
        in: header
        required: true
        style: simple
        schema:
          type: string
          enum:
          - application/json
      - name: country
        in: path
        required: true
        schema:
          type: string
          example: Australia, France, Mexico, India
      responses:
        '200':
          description: ''
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/Vaccine_{country}'
          headers:
            Accept: application/json

        '400':
          description:
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/error-400'
          headers:
            Accept: application/json
        '500':
          description:
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/error-500'
          headers:
            Accept: application/json
      deprecated: false
  covid-19/therapeutics:
    get:
      tags:
      - Therapeutics
      summary: Therapeutics info
      description: >-
        Get COVID-19 Therapeutics information

      operationId: covid-19/therapeutics
      parameters:
      - name: Accept
        in: header
        required: true
        style: simple
        schema:
          type: string
          enum:
          - application/json
      responses:
        '200':
          description: ''
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/Therapeutics'
          headers:
            Accept: application/json

        '400':
          description:
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/error-400'
          headers:
            Accept: application/json
        '500':
          description:
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/error-500'
          headers:
            Accept: application/json
      deprecated: false






















tags:
- name: Authentication
  description: >-
   The API uses Token System which is available when you login and goto profile panel

    <table>
        <tr>
            <td>Security Scheme Type</td>
            <td>HTTP</td>
        </tr>
        <tr>
            <td>HTTP Authorization Scheme</td>
            <td>bearer</td>
        </tr>
    </table>

    <h1> Rate limit </h1>

    The API enforces rate-limits to protect our servers against malicious and/or mistaken use.

    As of now global limit of 60 requests per minute per IP address is in effect.
- name: General
  description: Some general API endpoints which are for tracking or keeping the API alive
- name: World Info
  description: Here you will be able to search the data of Country , State or City where you can get id of the same and fetch further info to filter other data. If you have admin role then use the API token in your profile to manipulate the data of the same
- name: Categories
- name: Resources
  description: >-
    Here you will be able to fetch the data which is saved in DB or in cache.The resource data is auto updated every 10 min using scrappers.


    In order to update data using API you need to have access to API token which can be found in profile page same goes for adding new data using API.
- name: New requests
  description: >-
    Here you will be able to send a request to our server to add a new resource where our bot will check if required data is available and satsifying.

    Here all the API requests needs Authorization Token
- name: COVID 19
  description: >-
    Form Here you will see the all the API's which porvide covid data.


    > Note: if there is a delay in receiving any request then it may take 30s to 1 min to receive the request.

    > The server is refreshing the data so latest data will be available.

    > > This happens because the data is stored as cache in our server and some expires in 1 hour.

- name: Worldometers API
  description: >-
    Here is the data scrapped from  <a href="https://www.worldometers.info/coronavirus/" target="_blank">Worldometers website</a>
- name: JHUCSSE
  description: >-
    Here is data scrapped from <a href="https://github.com/CSSEGISandData/COVID-19" target="_blank">Johns Hopkins University Center for Systems Science and Engineering JHUCSSE</a>
- name: NYT
  description: >-
- name: Apple
  description: >-
    COVID-19 related mobility data and trends data from <a href="https://covid19.apple.com/mobility" target="_blank"> Apple </a>
- name: Government
  description: >-
    COVID-19 individual government reported data
- name: Vaccine
  description: >-
    This data is scrapped from  <a href="https://ourworldindata.org/" target="_blank"> ourworldindata </a>
- name: Therapeutics
  description: >-
    This data is taken from  <a href="https://www.raps.org/" target="_blank"> Regulatory Affairs Professionals Society (RAPS) </a>
    you can get the data from <a href="https://www.raps.org/RAPS/media/news-images/data/{{date}}-tx-tracker-Craven.csv" target="_blank"> https://www.raps.org/RAPS/media/news-images/data/{{date}}-tx-tracker-Craven.csv </a> where {{date}} is valid date
- name: models
  x-displayName: Models
  description: |-
    ## Login
    <SchemaDefinition schemaRef="#/components/schemas/login" />

    ## Register
    <SchemaDefinition schemaRef="#/components/schemas/register" />

    ## Country
    <SchemaDefinition schemaRef="#/components/schemas/Country" />

    ## State
    <SchemaDefinition schemaRef="#/components/schemas/State" />

    ## City
    <SchemaDefinition schemaRef="#/components/schemas/City" />

    ## Category
    <SchemaDefinition schemaRef="#/components/schemas/category" />

    ## Sub Category
    <SchemaDefinition schemaRef="#/components/schemas/sub-category" />

    ## Resources
    <SchemaDefinition schemaRef="#/components/schemas/resource" />

















components:
  schemas:
    Ping:
      description: ''
      type: object
      title: Ping
      properties:
        status:
          type: string
        status_code:
          type: integer
        deprecated:
          type: boolean
          enum:
          - false
        data:
          type: object
          properties:
            response:
              type: string
              enum:
              - Pong
    Country:
      description:
      type: object
      title: country
      properties:
        status:
          type: string
        status_code:
          type: integer
        deprecated:
          type: boolean
          enum:
          - false
        meta:
          type: object
          properties:
            current_page:
              type: integer
            data:
              type: object
              properties:
                id:
                  type: integer
                name:
                  type: string
                capital:
                  type: string
                code:
                  type: string
                phone_code:
                  type: string
                region:
                  type: string
                subregion:
                  type: string
                created_at:
                  type: string
                updated_at:
                  type: string
                deleted_at:
                  type: string
        first_page_url:
          type: string
        from:
          type: integer
        last_page:
          type: integer
        last_page_url:
          type: string
        links:
          $ref: '#/components/schemas/Links'
        next_page_url:
          type: string
        path:
          type: string
        per_page:
          type: integer
        prev_page_url:
          type: string
        to:
          type: integer
        total:
          type: integer
    Links:
      type: object
      properties:
        url:
          type: string
        label:
          type: string
        active:
          type: boolean
    State:
      description:
      type: object
      title: state
      properties:
        status:
          type: string
        status_code:
          type: integer
        deprecated:
          type: boolean
          enum:
          - false
        meta:
          type: object
          properties:
            current_page:
              type: integer
            data:
              type: object
              properties:
                id:
                  type: integer
                name:
                  type: string
                country_code:
                  type: string
                state_code:
                  type: string
                latitude:
                  type: string
                longitude:
                  type: string
                created_at:
                  type: string
                updated_at:
                  type: string
                deleted_at:
                  type: string
        first_page_url:
          type: string
        from:
          type: integer
        last_page:
          type: integer
        last_page_url:
          type: string
        links:
          $ref: '#/components/schemas/Links'
        next_page_url:
          type: string
        path:
          type: string
        per_page:
          type: integer
        prev_page_url:
          type: string
        to:
          type: integer
        total:
          type: integer
    City:
      description:
      type: object
      title: city
      properties:
        status:
          type: string
        status_code:
          type: integer
        deprecated:
          type: boolean
          enum:
          - false
        meta:
          type: object
          properties:
            current_page:
              type: integer
            data:
              type: object
              properties:
                id:
                  type: integer
                name:
                  type: string
                latitude:
                  type: string
                longitude:
                  type: string
                created_at:
                  type: string
                updated_at:
                  type: string
                deleted_at:
                  type: string
        first_page_url:
          type: string
        from:
          type: integer
        last_page:
          type: integer
        last_page_url:
          type: string
        links:
          $ref: '#/components/schemas/Links'
        next_page_url:
          type: string
        path:
          type: string
        per_page:
          type: integer
        prev_page_url:
          type: string
        to:
          type: integer
        total:
          type: integer
    category:
      description:
      type: object
      title: category
      properties:
        status:
          type: string
        status_code:
          type: integer
        deprecated:
          type: boolean
          enum:
          - false
        meta:
          type: object
          properties:
            current_page:
              type: integer
            data:
              type: object
              properties:
                id:
                  type: integer
                name:
                  type: string
                slug:
                  type: string
                created_at:
                  type: string
                updated_at:
                  type: string
                deleted_at:
                  type: string
                subcatogary:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    category_id:
                      type: integer
        first_page_url:
          type: string
        from:
          type: integer
        last_page:
          type: integer
        last_page_url:
          type: string
        links:
          $ref: '#/components/schemas/Links'
        next_page_url:
          type: string
        path:
          type: string
        per_page:
          type: integer
        prev_page_url:
          type: string
        to:
          type: integer
        total:
          type: integer
    sub-category:
      description:
      type: object
      title: sub-category
      properties:
        status:
          type: string
        status_code:
          type: integer
        deprecated:
          type: boolean
          enum:
          - false
        meta:
          type: object
          properties:
            current_page:
              type: integer
            data:
              type: object
              properties:
                id:
                  type: integer
                name:
                  type: string
                extra:
                  type: string
                created_at:
                  type: string
                updated_at:
                  type: string
                category_id:
                  type: integer
                category:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
        first_page_url:
          type: string
        from:
          type: integer
        last_page:
          type: integer
        last_page_url:
          type: string
        links:
          $ref: '#/components/schemas/Links'
        next_page_url:
          type: string
        path:
          type: string
        per_page:
          type: integer
        prev_page_url:
          type: string
        to:
          type: integer
        total:
          type: integer
    resource:
      description:
      type: object
      title: resource
      properties:
        status:
          type: string
        status_code:
          type: integer
        deprecated:
          type: boolean
          enum:
          - false
        meta:
          type: object
          properties:
            current_page:
              type: integer
            data:
              type: object
              properties:
                id:
                  type: integer
                name:
                  type: string
                phone_no:
                  type: string
                email:
                  type: string
                address:
                  type: string
                details:
                  type: string
                note:
                  type: string
                up_vote:
                  type: integer
                down_vote:
                  type: integer
                url:
                  type: string
                created_at:
                  type: string
                updated_at:
                  type: string
                deleted_at:
                  type: string
                city_id:
                  type: integer
                country_id:
                  type: integer
                state_id:
                  type: integer
                category:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    slug:
                      type: string
                    pivot:
                      type: object
                      properties:
                        resource_id:
                          type: integer
                        category_id:
                          type: integer
                city:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                state:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    state_code:
                      type: string
                country:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    code:
                      type: string
        first_page_url:
          type: string
        from:
          type: integer
        last_page:
          type: integer
        last_page_url:
          type: string
        links:
          $ref: '#/components/schemas/Links'
        next_page_url:
          type: string
        path:
          type: string
        per_page:
          type: integer
        prev_page_url:
          type: string
        to:
          type: integer
        total:
          type: integer
    error-500:
      title: error-500
      type: object
      properties:
        status:
          type: string
          enum:
          - System Error
        state_code:
          type: integer
          enum:
          - 500
        deprecated:
          type: boolean
          enum:
          - false
        error:
          type: string
          enum:
          - Error Message
    error-400:
      title: error-400
      type: object
      properties:
        status:
          type: string
          enum:
          - Bad Request
        state_code:
          type: integer
          enum:
          - 400
        deprecated:
          type: boolean
          enum:
          - false
        error:
          type: object

    login:
      title: login
      type: object
      properties:
        status:
          type: string
          enum:
          - Success
        state_code:
          type: integer
          enum:
          - 200
        deprecated:
          type: boolean
          enum:
          - false
        message:
          type: string
        data:
          $ref: '#/components/schemas/token'

    register:
      title: Register
      type: object
      required:
      - name
      - email
      - password
      properties:
        status:
          type: string
          enum:
          - Success
        state_code:
          type: integer
          enum:
          - 200
        deprecated:
          type: boolean
          enum:
          - false
        message:
          type: string
        data:
          $ref: '#/components/schemas/token'
    logout:
      title: Logout
      type: object
      properties:
        status:
          type: string
          enum:
          - Success
        state_code:
          type: integer
          enum:
          - 200
        deprecated:
          type: boolean
          enum:
          - false
        message:
          type: string
    token:
      title: token
      type: object
      required:
      - name
      - email
      - password
      properties:
        token:
          type: string
        token_type:
          type: string
          enum:
          - Bearer
    covid_19_All:
      description: ''
      type: object
      title: covid-19/All
      properties:
        status:
          type: string
        status_code:
          type: integer
        deprecated:
          type: boolean
          enum:
          - false
        meta:
          type: array
          items:
            properties:
              index:
                type: integer
              country:
                type: string
              continent:
                type: string
              iso2:
                type: string
              location:
                $ref: '#/components/schemas/location'
              timeline:
                type: object
                properties:
                  today:
                    type: object
                    $ref: '#/components/schemas/covid_19__worldometer_timeline'
                  yesterday:
                    type: object
                    $ref: '#/components/schemas/covid_19__worldometer_timeline'
                  yesterday2:
                    type: object
                    $ref: '#/components/schemas/covid_19__worldometer_timeline'
    location:
      type: object
      properties:
        latitude:
          type: string
        longitude:
          type: string
    covid_19__worldometer_timeline:
      type: object
      properties:
        cases:
          type: string
        todayCases:
          type: string
        deaths:
          type: string
        todayDeaths:
          type: string
        recovered:
          type: string
        todayRecovered:
          type: string
        active:
          type: string
        critical:
          type: string
        casesPerOneMillion:
          type: string
        deathsPerOneMillion:
          type: string
        tests:
          type: string
        testsPerOneMillion:
          type: string
        population:
          type: string
        oneCasePerPeople:
          type: string
        oneDeathPerPeople:
          type: string
        oneTestPerPeople:
          type: string
    covid_19__worldometer_timeline_state:
      type: object
      properties:
        cases:
          type: string
        todayCases:
          type: string
        deaths:
          type: string
        todayDeaths:
          type: string
        recovered:
          type: string
        todayRecovered:
          type: string
        active:
          type: string
        casesPerOneMillion:
          type: string
        deathsPerOneMillion:
          type: string
        tests:
          type: string
        testsPerOneMillion:
          type: string
        population:
          type: string
    covid_19__worldometer_timeline_countries:
      type: object
      properties:
        cases:
          type: string
        todayCases:
          type: string
        deaths:
          type: string
        todayDeaths:
          type: string
        recovered:
          type: string
        todayRecovered:
          type: string
        active:
          type: string
        critical:
          type: string
    covid_19_States:
      description: ''
      type: object
      title: covid-19/States
      properties:
        status:
          type: string
        status_code:
          type: integer
        deprecated:
          type: boolean
          enum:
          - false
        meta:
          type: array
          items:
            properties:
              index:
                type: integer
              state:
                type: string
              timeline:
                type: object
                properties:
                  today:
                    type: object
                    $ref: '#/components/schemas/covid_19__worldometer_timeline_state'
                  yesterday:
                    type: object
                    $ref: '#/components/schemas/covid_19__worldometer_timeline_state'
    covid_19_countries:
      description: ''
      type: object
      title: covid-19/States
      properties:
        status:
          type: string
        status_code:
          type: integer
        deprecated:
          type: boolean
          enum:
          - false
        meta:
          type: array
          items:
            properties:
              continent:
                type: string
              continantInfo:
                $ref: '#/components/schemas/location'
              countries:
                type: array
                items:
                  minItems: 39
                  type: string
              timeline:
                type: object
                properties:
                  today:
                    type: object
                    $ref: '#/components/schemas/covid_19__worldometer_timeline_countries'
                  yesterday:
                    type: object
                    $ref: '#/components/schemas/covid_19__worldometer_timeline_countries'
                  yesterday2:
                    type: object
                    $ref: '#/components/schemas/covid_19__worldometer_timeline_countries'


    covid_19_historical:
      description: ''
      type: object
      title: covid-19/historical
      properties:
        status:
          type: string
        status_code:
          type: integer
        deprecated:
          type: boolean
          enum:
          - false
        meta:
          type: array
          items:
            properties:
              country:
                type: string
              province:
                type: string
              location:
                $ref: '#/components/schemas/location'
              timeline:
                type: object
                properties:
                  cases:
                    type: object
                    $ref: '#/components/schemas/covid_19_historical_cases'
                  deaths:
                    type: object
                    $ref: '#/components/schemas/covid_19_historical_cases'
                  recovered:
                    type: object
                    $ref: '#/components/schemas/covid_19_historical_cases'
    covid_19_historical_cases:
      type: object
      properties:
        somedate:
          type: string
          enum:
          - value
        someotherdate:
          type: string
          enum:
          - value



    government:
      description: ''
      type: object
      title: government
      properties:
        status:
          type: string
        status_code:
          type: integer
        deprecated:
          type: boolean
          enum:
          - false
        meta:
          type: object
          properties:
            supported:
              type: array
              example: [Austria , Canada,]

    nyt-default:
      description: ''
      type: object
      title: NYT Default
      properties:
        states/country:
          type: array

    nyt:
      description: ''
      type: object
      title: NYT
      properties:
        status:
          type: string
        status_code:
          type: integer
        deprecated:
          type: boolean
          enum:
          - false
        meta:
          $ref: '#/components/schemas/nyt-default'

    nytavarage:
      description: ''
      type: object
      title: NYT
      properties:
        status:
          type: string
        status_code:
          type: integer
        deprecated:
          type: boolean
          enum:
          - false
        meta:
          type: object
          properties:
            total:
              type: integer
            per_page:
              type: integer
            total_pages:
              type: integer
            pages:
              type: array
              items:
                type: array

    apple-country:
      description: ''
      type: object
      title: NYT
      properties:
        status:
          type: string
        status_code:
          type: integer
        deprecated:
          type: boolean
          enum:
          - false
        meta:
          type: array
          example:
          - list
          - of
          - countries
          - or
          - states
    apple-country-data:
      description: ''
      type: object
      title: NYT
      properties:
        status:
          type: string
        status_code:
          type: integer
        deprecated:
          type: boolean
          enum:
          - false
        meta:
          type: object
          properties:
            total:
              type: interger
            per_page:
              type: interger
            total_pages:
              type: interger
            pages:
              type: array
              items:
                type: array
                items:
                  type: object
                  properties:
                    country:
                      type: string
                    sub-region:
                      type: string
                    subregion_and_city:
                      type: string
                    geo_type:
                      type: string
                    date:
                      type: string
                    driving:
                      type: number
                    transit:
                      type: number
                    walking:
                      type: number
    apple-us-data:
      description: ''
      type: object
      title: NYT
      properties:
        status:
          type: string
        status_code:
          type: integer
        deprecated:
          type: boolean
          enum:
          - false
        meta:
          type: object
          properties:
            total:
              type: interger
            per_page:
              type: interger
            total_pages:
              type: interger
            pages:
              type: array
              items:
                type: array
                items:
                  type: object
                  properties:
                    state:
                      type: string
                    county_and_city:
                      type: string
                    geo_type:
                      type: string
                    date:
                      type: string
                    driving:
                      type: number
                    transit:
                      type: number
                    walking:
                      type: number
    Vaccine:
      description: ''
      type: object
      title: Vaccine
      properties:
        status:
          type: string
        status_code:
          type: integer
        deprecated:
          type: boolean
          enum:
          - false
        meta:
          type: object
          properties:
            country:
              type: array


    Vaccine_{country}:
      description: ''
      type: object
      title: Vaccine
      properties:
        status:
          type: string
        status_code:
          type: integer
        deprecated:
          type: boolean
          enum:
          - false
        meta:
          type: object
          properties:
            total:
              type: interger
            per_page:
              type: interger
            total_pages:
              type: interger
            pages:
              type: array
              items:
                type: array
                items:
                  type: object
                  properties:
                    location:
                      type: string
                    iso_code:
                      type: string
                    date:
                      type: string
                    total_vaccinations:
                      type: number
                    people_vaccinated:
                      type: number
                    people_fully_vaccinated:
                      type: number
                    total_boosters:
                      type: number
                    daily_vaccinations_raw:
                      type: number
                    daily_vaccinations:
                      type: number
                    total_vaccinations_per_hundred:
                      type: number
                    people_vaccinated_per_hundred:
                      type: number
                    people_fully_vaccinated_per_hundred:
                      type: number
                    total_boosters_per_hundred:
                      type: number
                    daily_vaccinations_per_million:
                      type: number
    Therapeutics:
      description: ''
      type: object
      title: Therapeutics
      properties:
        status:
          type: string
        status_code:
          type: integer
        deprecated:
          type: boolean
          enum:
          - false
        meta:
          type: array
          items:
            type: object
            properties:
              medication_class:
                type: string
              generic_name:
                type: string
              details:
                type: string
              Developer/Researcher:
                type: string
              Sponsor:
                type: string
              trial_phase:
                type: string
              last_update:
                type: string


